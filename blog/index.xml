<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blogs on </title>
    <link>https://piotrglazar.github.io/blog/</link>
    <description>Recent content in Blogs on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Â© 2020</copyright>
    <lastBuildDate>Sun, 13 Sep 2020 13:28:39 +0200</lastBuildDate>
    
	<atom:link href="https://piotrglazar.github.io/blog/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Java 14 instanceof Pattern Matching</title>
      <link>https://piotrglazar.github.io/blog/java-14-instanceof-pattern-matching/</link>
      <pubDate>Sun, 13 Sep 2020 13:28:39 +0200</pubDate>
      
      <guid>https://piotrglazar.github.io/blog/java-14-instanceof-pattern-matching/</guid>
      <description>Introduction As of today, Java 14 is the latest Java version. It introduces various cool features that I&amp;rsquo;d like to show here. However, in this post I will focus on Pattern Matching for instanceof. This feature is in preview, so you have to explicitly enable it in your project. You can check my previous post to see how to do it in Gradle. Alternatively, you can take a look at full example here.</description>
    </item>
    
    <item>
      <title>Java Preview Features</title>
      <link>https://piotrglazar.github.io/blog/java-preview-features-in-gradle/</link>
      <pubDate>Sun, 13 Sep 2020 13:05:21 +0200</pubDate>
      
      <guid>https://piotrglazar.github.io/blog/java-preview-features-in-gradle/</guid>
      <description>Introduction A great software developer should always learn. Fortunately, after Java 8 has been released, the development pace of next Java versions increased. I think that every Java developer should be up do date with the newest features. However, some of them are marked as preview, so they won&amp;rsquo;t compile by default.
Preview features and Gradle Gradle is my favourite build tool for Java projects. In this post I&amp;rsquo;m going to present how to use Java preview features in Gradle projects.</description>
    </item>
    
    <item>
      <title>Where does that class come from?</title>
      <link>https://piotrglazar.github.io/blog/class-location/</link>
      <pubDate>Fri, 21 Aug 2020 16:36:41 +0200</pubDate>
      
      <guid>https://piotrglazar.github.io/blog/class-location/</guid>
      <description>Dependency hell I believe every Java developer is familiar with the dependency hell term. We use external libraries because they speed up the development process. Instead of reinventing the wheel we can just include a library, like Guava, and we are able to use various functionalities that have been well tested by other people. But unfortunately sometimes we have to pay a high price for this. Libraries can include other libraries and so on, forming a dependency graph.</description>
    </item>
    
    <item>
      <title>Anaconda</title>
      <link>https://piotrglazar.github.io/blog/anaconda/</link>
      <pubDate>Mon, 03 Aug 2020 22:19:49 +0200</pubDate>
      
      <guid>https://piotrglazar.github.io/blog/anaconda/</guid>
      <description>Introduction Every programmer should know (or be familiar with) a couple of programming languages. Some languages like Java or Scala are good for production-ready applications. On the other hand, some languages like Python are good for scripting, tooling or creating proof of concepts. If you want to dig deep into being a pragmatic programmer I highly recommend reading The Pragmatic Programmer: From Journeyman to Master by Andrew Hunt and David Thomas.</description>
    </item>
    
    <item>
      <title>jEnv - Managing Multiple Jdks</title>
      <link>https://piotrglazar.github.io/blog/jenv-multiple-jdks/</link>
      <pubDate>Sun, 26 Jul 2020 10:33:48 +0200</pubDate>
      
      <guid>https://piotrglazar.github.io/blog/jenv-multiple-jdks/</guid>
      <description>Introduction Before Java 8 there was no need to have multiple JDKs on your machine. Java development process was slow enough that even big and rusty corporations could catch up. But since JDK 9 the development process is much faster and new Java versions are released more often.
Why even bother? Some projects may run on an older JDK due to various reasons:
 the tooling does not yet support new JDKs, some libraries do not work on new JDKs - this can be seen when migrating from pre-JDK 9 to JDK 9 or onward, sometimes it is better to wait than to be an early adopter for core production services, and many, many more.</description>
    </item>
    
    <item>
      <title>Git Aliases</title>
      <link>https://piotrglazar.github.io/blog/git-aliases/</link>
      <pubDate>Sun, 12 Jul 2020 12:57:58 +0200</pubDate>
      
      <guid>https://piotrglazar.github.io/blog/git-aliases/</guid>
      <description>Introduction This is the first post of &amp;ldquo;Workstation Setup&amp;rdquo; series. I will be covering how to setup various tools that I use in daily work in each episode. This series is inspired by the fact that I&amp;rsquo;m currently migrating from old computer to a new one at work. This episode will cover how to set up git aliases. In case you are not familiar with git, you should visit the official web page.</description>
    </item>
    
    <item>
      <title>About Me</title>
      <link>https://piotrglazar.github.io/blog/about-me/</link>
      <pubDate>Tue, 30 Jun 2020 23:25:32 +0200</pubDate>
      
      <guid>https://piotrglazar.github.io/blog/about-me/</guid>
      <description>About me My name is Piotr Glazar. I graduated from University of Warsaw with Msc in Computer Science.
I&amp;rsquo;m proficient in the following programming languages:  Scala Java Python  And frameworks:  Spring (Spring Boot) and friends Akka Numpy and friends  And tools:  Kubernetes Git AWS Gradle SBT  I&amp;rsquo;m familiar with the following databases:  Postgres / MySQL Cassandra MongoDB  I have intermediate knowledge of:  Golang Bash Javascript  Hobbies and interests Apart from programming I&amp;rsquo;m interested in astronomy.</description>
    </item>
    
  </channel>
</rss>