<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>new-feature on </title>
    <link>https://piotrglazar.github.io/tags/new-feature/</link>
    <description>Recent content in new-feature on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Â© 2020</copyright>
    <lastBuildDate>Wed, 23 Sep 2020 22:29:46 +0200</lastBuildDate>
    
	<atom:link href="https://piotrglazar.github.io/tags/new-feature/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Java 14 Records</title>
      <link>https://piotrglazar.github.io/blog/java-14-records/</link>
      <pubDate>Wed, 23 Sep 2020 22:29:46 +0200</pubDate>
      
      <guid>https://piotrglazar.github.io/blog/java-14-records/</guid>
      <description>https://dzone.com/articles/a-first-look-at-records-in-java-14
Introduction Java 14 brings in another cool feature - Records. They are designed to represent only the state, without additional boilerplate. This feature is in preview, so you have to explicitly enable it in your project. You can check my previous post to see how to do it in Gradle. Alternatively, you can take a look at full example here.
How does a record look like Take a look at the following piece of code:</description>
    </item>
    
    <item>
      <title>Java 14 instanceof Pattern Matching</title>
      <link>https://piotrglazar.github.io/blog/java-14-instanceof-pattern-matching/</link>
      <pubDate>Sun, 13 Sep 2020 13:28:39 +0200</pubDate>
      
      <guid>https://piotrglazar.github.io/blog/java-14-instanceof-pattern-matching/</guid>
      <description>Introduction As of today, Java 14 is the latest Java version. It introduces various cool features that I&amp;rsquo;d like to show here. However, in this post I will focus on Pattern Matching for instanceof. This feature is in preview, so you have to explicitly enable it in your project. You can check my previous post to see how to do it in Gradle. Alternatively, you can take a look at full example here.</description>
    </item>
    
  </channel>
</rss>