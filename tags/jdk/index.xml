<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>jdk on </title>
    <link>https://example.org/tags/jdk/</link>
    <description>Recent content in jdk on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Â© 2020</copyright>
    <lastBuildDate>Sun, 26 Jul 2020 10:33:48 +0200</lastBuildDate>
    
	<atom:link href="https://example.org/tags/jdk/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>jEnv - Managing Multiple Jdks</title>
      <link>https://example.org/blog/jenv-multiple-jdks/</link>
      <pubDate>Sun, 26 Jul 2020 10:33:48 +0200</pubDate>
      
      <guid>https://example.org/blog/jenv-multiple-jdks/</guid>
      <description>Introduction Before Java 8 there was no need to have multiple JDKs on your machine. Java development process was slow enough that even big and rusty corporations could catch up. But since JDK 9 the development process is much faster and new Java versions are released more often.
Why even bother? Some projects may run on an older JDK due to various reasons:
 the tooling does not yet support new JDKs, some libraries do not work on new JDKs - this can be seen when migrating from pre-JDK 9 to JDK 9 or onward, sometimes it is better to wait than to be an early adopter for core production services, and many, many more.</description>
    </item>
    
  </channel>
</rss>